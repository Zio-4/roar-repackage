import { DocumentReference } from 'firebase/firestore';
import { RoarTaskVariant } from './task';
import { RoarUser } from './user';
/**
 * Convert a trial data to allow storage on Cloud Firestore.
 *
 * This function leaves all other trial data intact but converts
 * any URL object to a string.
 *
 * @function
 * @param {Object} trialData - Trial data to convert
 * @returns {Object} Converted trial data
 */
export declare const convertTrialToFirestore: (trialData: object) => object;
export interface RunInput {
    user: RoarUser;
    task: RoarTaskVariant;
}
/**
 * Class representing a ROAR run.
 *
 * A run is a globally unique collection of successive trials that constitute
 * one user "running" through a single task one time.
 */
export declare class RoarRun {
    user: RoarUser;
    task: RoarTaskVariant;
    runRef: DocumentReference;
    started: boolean;
    /** Create a ROAR run
     * @param {RoarUser} user - The user running the task
     * @param {RoarTaskVariant} task - The task variant being run
     */
    constructor({ user, task }: RunInput);
    /**
     * Create a new run on Firestore
     * @method
     * @async
     */
    startRun(): Promise<void>;
    /**
     * Mark this run as complete on Firestore
     * @method
     * @async
     */
    finishRun(): Promise<void>;
    /**
     * Add a new trial to this run on Firestore
     * @method
     * @async
     * @param {*} trialData - An object containing trial data.
     */
    writeTrial(trialData: Record<string, unknown>): Promise<void>;
}
