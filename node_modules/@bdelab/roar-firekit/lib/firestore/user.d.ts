import { DocumentReference } from 'firebase/firestore';
export declare type userCategoryType = 'student' | 'educator' | 'researcher';
export interface UserData {
    id: string;
    birthMonth?: number | null;
    birthYear?: number | null;
    classId?: string | null;
    schoolId?: string | null;
    districtId?: string | null;
    studyId?: string | null;
    userCategory?: userCategoryType;
    userMetadata?: Record<string, unknown>;
}
export interface UserInput extends UserData {
    firebaseUid: string;
}
/** Class representing a ROAR user */
export declare class RoarUser {
    /** Create a ROAR user
     * @param {string} id - The ROAR ID of the user
     * @param {string} firebaseUid - The firebase UID of the user
     * @param {number} birthMonth - The birth month of the user
     * @param {number} birthYear - The birth year of the user
     * @param {string} classId - The class ID of the user
     * @param {string} schoolId - The school ID of the user
     * @param {string} districtId - The district ID of the user
     * @param {string} studyId - The study ID of the user
     * @param {string} userCategory - The user type. Must be either "student," "educator," or "researcher"
     * @param {*} userMetadata - An object containing additional user metadata
     */
    id: string;
    firebaseUid: string;
    birthMonth: number | null;
    birthYear: number | null;
    classId: string | null;
    schoolId: string | null;
    districtId: string | null;
    studyId: string | null;
    userCategory: userCategoryType;
    isPushedToFirestore: boolean;
    userRef: DocumentReference | undefined;
    userMetadata: Record<string, unknown>;
    constructor({ id, firebaseUid, birthMonth, birthYear, classId, schoolId, districtId, studyId, userCategory, userMetadata, }: UserInput);
    /** Set Firestore doc references
     * @param {DocumentReference} rootDoc - The root document reference
     */
    setRefs(rootDoc: DocumentReference): void;
    /**
     * Push the user to Firestore
     * @method
     * @async
     */
    toFirestore(): Promise<void>;
    /**
     * Update the user's "lastUpdated" timestamp
     * @method
     * @async
     */
    updateFirestoreTimestamp(): Promise<void>;
}
