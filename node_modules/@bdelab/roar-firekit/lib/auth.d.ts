/**
 * Return a unique, reproducible, and disposable email address for the
 * user.
 *
 * We create an email/password combination for each roar UID. This
 * function uses dispostable.com to create a disposable email address for
 * authentication. On dispostable.com, unread emails are deleted after 2
 * days and read messages are deleted after 2 months. These messages are
 * viewable by anyone who knows the email address, so this email is not
 * intended to receive secure messages.
 *
 * @function
 * @param {string} roarUid - The ROAR user ID
 * @returns {string} - The email address
 */
export declare const roarEmail: (roarUid: string) => string;
/**
 * Return a unique and reproducible password for the user.
 *
 * We create an email/password combination for each roar UID. This
 * computed property returns a UUID V5 hash of the roar UID using the ROAR
 * UUID namespace, which itself is a UUID V5 hash of the the
 * https://reading.stanford.edu/ URL using the UUID V5 URL namespace.
 *
 * @function
 * @param {string} roarUid - The ROAR user ID
 * @returns {string} - The password
 */
export declare const roarPassword: (roarUid: string) => string;
export declare const firebaseSignIn: (roarUid: string) => Promise<import("@firebase/auth").Auth>;
export declare const firebaseSignOut: () => Promise<import("@firebase/auth").Auth>;
