{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"video-button-response\",\n  parameters: {\n    /** Array of the video file(s) to play. Video can be provided in multiple file formats for better cross-browser support. */\n    stimulus: {\n      type: ParameterType.VIDEO,\n      pretty_name: \"Video\",\n      default: undefined,\n      array: true,\n    },\n    /** Array containing the label(s) for the button(s). */\n    choices: {\n      type: ParameterType.STRING,\n      pretty_name: \"Choices\",\n      default: undefined,\n      array: true,\n    },\n    /** The HTML for creating button. Can create own style. Use the \"%choice%\" string to indicate where the label from the choices parameter should be inserted. */\n    button_html: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Button HTML\",\n      default: '<button class=\"jspsych-btn\">%choice%</button>',\n      array: true,\n    },\n    /** Any content here will be displayed below the buttons. */\n    prompt: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Prompt\",\n      default: null,\n    },\n    /** The width of the video in pixels. */\n    width: {\n      type: ParameterType.INT,\n      pretty_name: \"Width\",\n      default: \"\",\n    },\n    /** The height of the video display in pixels. */\n    height: {\n      type: ParameterType.INT,\n      pretty_name: \"Height\",\n      default: \"\",\n    },\n    /** If true, the video will begin playing as soon as it has loaded. */\n    autoplay: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Autoplay\",\n      default: true,\n    },\n    /** If true, the subject will be able to pause the video or move the playback to any point in the video. */\n    controls: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Controls\",\n      default: false,\n    },\n    /** Time to start the clip. If null (default), video will start at the beginning of the file. */\n    start: {\n      type: ParameterType.FLOAT,\n      pretty_name: \"Start\",\n      default: null,\n    },\n    /** Time to stop the clip. If null (default), video will stop at the end of the file. */\n    stop: {\n      type: ParameterType.FLOAT,\n      pretty_name: \"Stop\",\n      default: null,\n    },\n    /** The playback rate of the video. 1 is normal, <1 is slower, >1 is faster. */\n    rate: {\n      type: ParameterType.FLOAT,\n      pretty_name: \"Rate\",\n      default: 1,\n    },\n    /** If true, the trial will end immediately after the video finishes playing. */\n    trial_ends_after_video: {\n      type: ParameterType.BOOL,\n      pretty_name: \"End trial after video finishes\",\n      default: false,\n    },\n    /** How long to show trial before it ends. */\n    trial_duration: {\n      type: ParameterType.INT,\n      pretty_name: \"Trial duration\",\n      default: null,\n    },\n    /** The vertical margin of the button. */\n    margin_vertical: {\n      type: ParameterType.STRING,\n      pretty_name: \"Margin vertical\",\n      default: \"0px\",\n    },\n    /** The horizontal margin of the button. */\n    margin_horizontal: {\n      type: ParameterType.STRING,\n      pretty_name: \"Margin horizontal\",\n      default: \"8px\",\n    },\n    /** If true, the trial will end when subject makes a response. */\n    response_ends_trial: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response ends trial\",\n      default: true,\n    },\n    /** If true, then responses are allowed while the video is playing. If false, then the video must finish playing before a response is accepted. */\n    response_allowed_while_playing: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Response allowed while playing\",\n      default: true,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **video-button-response**\n *\n * jsPsych plugin for playing a video file and getting a button response\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-video-button-response/ video-button-response plugin documentation on jspsych.org}\n */\nclass VideoButtonResponsePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    if (!Array.isArray(trial.stimulus)) {\n      throw new Error(`\n        The stimulus property for the video-button-response plugin must be an array\n        of files. See https://www.jspsych.org/latest/plugins/video-button-response/#parameters\n      `);\n    }\n\n    // setup stimulus\n    var video_html = \"<div>\";\n    video_html += '<video id=\"jspsych-video-button-response-stimulus\"';\n\n    if (trial.width) {\n      video_html += ' width=\"' + trial.width + '\"';\n    }\n    if (trial.height) {\n      video_html += ' height=\"' + trial.height + '\"';\n    }\n    if (trial.autoplay && trial.start == null) {\n      // if autoplay is true and the start time is specified, then the video will start automatically\n      // via the play() method, rather than the autoplay attribute, to prevent showing the first frame\n      video_html += \" autoplay \";\n    }\n    if (trial.controls) {\n      video_html += \" controls \";\n    }\n    if (trial.start !== null) {\n      // hide video element when page loads if the start time is specified,\n      // to prevent the video element from showing the first frame\n      video_html += ' style=\"visibility: hidden;\"';\n    }\n    video_html += \">\";\n\n    var video_preload_blob = this.jsPsych.pluginAPI.getVideoBuffer(trial.stimulus[0]);\n    if (!video_preload_blob) {\n      for (var i = 0; i < trial.stimulus.length; i++) {\n        var file_name = trial.stimulus[i];\n        if (file_name.indexOf(\"?\") > -1) {\n          file_name = file_name.substring(0, file_name.indexOf(\"?\"));\n        }\n        var type = file_name.substr(file_name.lastIndexOf(\".\") + 1);\n        type = type.toLowerCase();\n        if (type == \"mov\") {\n          console.warn(\n            \"Warning: video-button-response plugin does not reliably support .mov files.\"\n          );\n        }\n        video_html += '<source src=\"' + file_name + '\" type=\"video/' + type + '\">';\n      }\n    }\n    video_html += \"</video>\";\n    video_html += \"</div>\";\n\n    //display buttons\n    var buttons = [];\n    if (Array.isArray(trial.button_html)) {\n      if (trial.button_html.length == trial.choices.length) {\n        buttons = trial.button_html;\n      } else {\n        console.error(\n          \"Error in video-button-response plugin. The length of the button_html array does not equal the length of the choices array\"\n        );\n      }\n    } else {\n      for (var i = 0; i < trial.choices.length; i++) {\n        buttons.push(trial.button_html);\n      }\n    }\n    video_html += '<div id=\"jspsych-video-button-response-btngroup\">';\n    for (var i = 0; i < trial.choices.length; i++) {\n      var str = buttons[i].replace(/%choice%/g, trial.choices[i]);\n      video_html +=\n        '<div class=\"jspsych-video-button-response-button\" style=\"cursor: pointer; display: inline-block; margin:' +\n        trial.margin_vertical +\n        \" \" +\n        trial.margin_horizontal +\n        '\" id=\"jspsych-video-button-response-button-' +\n        i +\n        '\" data-choice=\"' +\n        i +\n        '\">' +\n        str +\n        \"</div>\";\n    }\n    video_html += \"</div>\";\n\n    // add prompt if there is one\n    if (trial.prompt !== null) {\n      video_html += trial.prompt;\n    }\n\n    display_element.innerHTML = video_html;\n\n    var start_time = performance.now();\n\n    var video_element = display_element.querySelector<HTMLVideoElement>(\n      \"#jspsych-video-button-response-stimulus\"\n    );\n\n    if (video_preload_blob) {\n      video_element.src = video_preload_blob;\n    }\n\n    video_element.onended = () => {\n      if (trial.trial_ends_after_video) {\n        end_trial();\n      } else if (!trial.response_allowed_while_playing) {\n        enable_buttons();\n      }\n    };\n\n    video_element.playbackRate = trial.rate;\n\n    // if video start time is specified, hide the video and set the starting time\n    // before showing and playing, so that the video doesn't automatically show the first frame\n    if (trial.start !== null) {\n      video_element.pause();\n      video_element.onseeked = () => {\n        video_element.style.visibility = \"visible\";\n        video_element.muted = false;\n        if (trial.autoplay) {\n          video_element.play();\n        } else {\n          video_element.pause();\n        }\n        video_element.onseeked = () => {};\n      };\n      video_element.onplaying = () => {\n        video_element.currentTime = trial.start;\n        video_element.onplaying = () => {};\n      };\n      // fix for iOS/MacOS browsers: videos aren't seekable until they start playing, so need to hide/mute, play,\n      // change current time, then show/unmute\n      video_element.muted = true;\n      video_element.play();\n    }\n\n    let stopped = false;\n    if (trial.stop !== null) {\n      video_element.addEventListener(\"timeupdate\", (e) => {\n        var currenttime = video_element.currentTime;\n        if (currenttime >= trial.stop) {\n          if (!trial.response_allowed_while_playing) {\n            enable_buttons();\n          }\n          video_element.pause();\n          if (trial.trial_ends_after_video && !stopped) {\n            // this is to prevent end_trial from being called twice, because the timeupdate event\n            // can fire in quick succession\n            stopped = true;\n            end_trial();\n          }\n        }\n      });\n    }\n\n    if (trial.response_allowed_while_playing) {\n      enable_buttons();\n    } else {\n      disable_buttons();\n    }\n\n    // store response\n    var response = {\n      rt: null,\n      button: null,\n    };\n\n    // function to end trial when it is time\n    const end_trial = () => {\n      // kill any remaining setTimeout handlers\n      this.jsPsych.pluginAPI.clearAllTimeouts();\n\n      // stop the video file if it is playing\n      // remove any remaining end event handlers\n      display_element\n        .querySelector<HTMLVideoElement>(\"#jspsych-video-button-response-stimulus\")\n        .pause();\n      display_element.querySelector<HTMLVideoElement>(\n        \"#jspsych-video-button-response-stimulus\"\n      ).onended = () => {};\n\n      // gather the data to store for the trial\n      var trial_data = {\n        rt: response.rt,\n        stimulus: trial.stimulus,\n        response: response.button,\n      };\n\n      // clear the display\n      display_element.innerHTML = \"\";\n\n      // move on to the next trial\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    // function to handle responses by the subject\n    function after_response(choice: string) {\n      // measure rt\n      var end_time = performance.now();\n      var rt = Math.round(end_time - start_time);\n      response.button = parseInt(choice);\n      response.rt = rt;\n\n      // after a valid response, the stimulus will have the CSS class 'responded'\n      // which can be used to provide visual feedback that a response was recorded\n      video_element.className += \" responded\";\n\n      // disable all the buttons after a response\n      disable_buttons();\n\n      if (trial.response_ends_trial) {\n        end_trial();\n      }\n    }\n\n    function button_response(e) {\n      var choice = e.currentTarget.getAttribute(\"data-choice\"); // don't use dataset for jsdom compatibility\n      after_response(choice);\n    }\n\n    function disable_buttons() {\n      var btns = document.querySelectorAll(\".jspsych-video-button-response-button\");\n      for (var i = 0; i < btns.length; i++) {\n        var btn_el = btns[i].querySelector(\"button\");\n        if (btn_el) {\n          btn_el.disabled = true;\n        }\n        btns[i].removeEventListener(\"click\", button_response);\n      }\n    }\n\n    function enable_buttons() {\n      var btns = document.querySelectorAll(\".jspsych-video-button-response-button\");\n      for (var i = 0; i < btns.length; i++) {\n        var btn_el = btns[i].querySelector(\"button\");\n        if (btn_el) {\n          btn_el.disabled = false;\n        }\n        btns[i].addEventListener(\"click\", button_response);\n      }\n    }\n\n    // end trial if time limit is set\n    if (trial.trial_duration !== null) {\n      this.jsPsych.pluginAPI.setTimeout(end_trial, trial.trial_duration);\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const default_data = {\n      stimulus: trial.stimulus,\n      rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),\n      response: this.jsPsych.randomization.randomInt(0, trial.choices.length - 1),\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const video_element = display_element.querySelector<HTMLVideoElement>(\n      \"#jspsych-video-button-response-stimulus\"\n    );\n\n    const respond = () => {\n      if (data.rt !== null) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(`div[data-choice=\"${data.response}\"] button`),\n          data.rt\n        );\n      }\n    };\n\n    if (!trial.response_allowed_while_playing) {\n      video_element.addEventListener(\"ended\", respond);\n    } else {\n      respond();\n    }\n  }\n}\n\nexport default VideoButtonResponsePlugin;\n"],"names":["info","name","parameters","stimulus","type","ParameterType","VIDEO","pretty_name","default","undefined","array","choices","STRING","button_html","HTML_STRING","prompt","width","INT","height","autoplay","BOOL","controls","start","FLOAT","stop","rate","trial_ends_after_video","trial_duration","margin_vertical","margin_horizontal","response_ends_trial","response_allowed_while_playing","VideoButtonResponsePlugin","jsPsych","_classCallCheck","this","display_element","trial","_this","Array","isArray","Error","video_html","video_preload_blob","pluginAPI","getVideoBuffer","i","length","file_name","indexOf","substring","substr","lastIndexOf","toLowerCase","console","warn","buttons","error","push","str","replace","innerHTML","start_time","performance","now","video_element","querySelector","src","onended","end_trial","enable_buttons","playbackRate","pause","onseeked","style","visibility","muted","play","onplaying","currentTime","stopped","addEventListener","e","disable_buttons","response","rt","button","clearAllTimeouts","trial_data","finishTrial","button_response","choice","end_time","Math","round","parseInt","className","after_response","currentTarget","getAttribute","btns","document","querySelectorAll","btn_el","disabled","removeEventListener","setTimeout","value","simulation_mode","simulation_options","load_callback","simulate_data_only","simulate_visual","default_data","randomization","sampleExGaussian","randomInt","data","mergeSimulationData","ensureSimulationDataConsistency","create_simulation_data","_this2","getDisplayElement","respond","clickTarget","concat"],"mappings":"8NAEA,IAAMA,EAAc,CAClBC,KAAM,wBACNC,WAAY,CAEVC,SAAU,CACRC,KAAMC,EAAaA,cAACC,MACpBC,YAAa,QACbC,aAASC,EACTC,OAAO,GAGTC,QAAS,CACPP,KAAMC,EAAaA,cAACO,OACpBL,YAAa,UACbC,aAASC,EACTC,OAAO,GAGTG,YAAa,CACXT,KAAMC,EAAaA,cAACS,YACpBP,YAAa,cACbC,QAAS,gDACTE,OAAO,GAGTK,OAAQ,CACNX,KAAMC,EAAaA,cAACS,YACpBP,YAAa,SACbC,QAAS,MAGXQ,MAAO,CACLZ,KAAMC,EAAaA,cAACY,IACpBV,YAAa,QACbC,QAAS,IAGXU,OAAQ,CACNd,KAAMC,EAAaA,cAACY,IACpBV,YAAa,SACbC,QAAS,IAGXW,SAAU,CACRf,KAAMC,EAAaA,cAACe,KACpBb,YAAa,WACbC,SAAS,GAGXa,SAAU,CACRjB,KAAMC,EAAaA,cAACe,KACpBb,YAAa,WACbC,SAAS,GAGXc,MAAO,CACLlB,KAAMC,EAAaA,cAACkB,MACpBhB,YAAa,QACbC,QAAS,MAGXgB,KAAM,CACJpB,KAAMC,EAAaA,cAACkB,MACpBhB,YAAa,OACbC,QAAS,MAGXiB,KAAM,CACJrB,KAAMC,EAAaA,cAACkB,MACpBhB,YAAa,OACbC,QAAS,GAGXkB,uBAAwB,CACtBtB,KAAMC,EAAaA,cAACe,KACpBb,YAAa,iCACbC,SAAS,GAGXmB,eAAgB,CACdvB,KAAMC,EAAaA,cAACY,IACpBV,YAAa,iBACbC,QAAS,MAGXoB,gBAAiB,CACfxB,KAAMC,EAAaA,cAACO,OACpBL,YAAa,kBACbC,QAAS,OAGXqB,kBAAmB,CACjBzB,KAAMC,EAAaA,cAACO,OACpBL,YAAa,oBACbC,QAAS,OAGXsB,oBAAqB,CACnB1B,KAAMC,EAAaA,cAACe,KACpBb,YAAa,sBACbC,SAAS,GAGXuB,+BAAgC,CAC9B3B,KAAMC,EAAaA,cAACe,KACpBb,YAAa,iCACbC,SAAS,KAeTwB,aAGJ,SAAAA,EAAoBC,gGAAgBC,CAAAC,KAAAH,GAAhBG,KAAOF,QAAPA,CAAoB,6CAExC,SAAMG,EAA8BC,GAAsB,IAAAC,EAAAH,KACxD,IAAKI,MAAMC,QAAQH,EAAMlC,UACvB,MAAM,IAAIsC,MAAV,iMAOF,IAAIC,EAAa,QACjBA,GAAc,qDAEVL,EAAMrB,QACR0B,GAAc,WAAaL,EAAMrB,MAAQ,KAEvCqB,EAAMnB,SACRwB,GAAc,YAAcL,EAAMnB,OAAS,KAEzCmB,EAAMlB,UAA2B,MAAfkB,EAAMf,QAG1BoB,GAAc,cAEZL,EAAMhB,WACRqB,GAAc,cAEI,OAAhBL,EAAMf,QAGRoB,GAAc,gCAEhBA,GAAc,IAEd,IAAIC,EAAqBR,KAAKF,QAAQW,UAAUC,eAAeR,EAAMlC,SAAS,IAC9E,IAAKwC,EACH,IAAK,IAAIG,EAAI,EAAGA,EAAIT,EAAMlC,SAAS4C,OAAQD,IAAK,CAC9C,IAAIE,EAAYX,EAAMlC,SAAS2C,GAC3BE,EAAUC,QAAQ,MAAQ,IAC5BD,EAAYA,EAAUE,UAAU,EAAGF,EAAUC,QAAQ,OAEvD,IAAI7C,EAAO4C,EAAUG,OAAOH,EAAUI,YAAY,KAAO,GAE7C,QADZhD,EAAOA,EAAKiD,gBAEVC,QAAQC,KACN,+EAGJb,GAAc,gBAAkBM,EAAY,iBAAmB5C,EAAO,IACvE,CAEHsC,GAAc,WACdA,GAAc,SAGd,IAAIc,EAAU,GACd,GAAIjB,MAAMC,QAAQH,EAAMxB,aAClBwB,EAAMxB,YAAYkC,QAAUV,EAAM1B,QAAQoC,OAC5CS,EAAUnB,EAAMxB,YAEhByC,QAAQG,MACN,kIAIJ,IAASX,EAAI,EAAGA,EAAIT,EAAM1B,QAAQoC,OAAQD,IACxCU,EAAQE,KAAKrB,EAAMxB,aAIvB,IADA6B,GAAc,oDACLI,EAAI,EAAGA,EAAIT,EAAM1B,QAAQoC,OAAQD,IAAK,CAC7C,IAAIa,EAAMH,EAAQV,GAAGc,QAAQ,YAAavB,EAAM1B,QAAQmC,IACxDJ,GACE,2GACAL,EAAMT,gBACN,IACAS,EAAMR,kBACN,8CACAiB,EACA,kBACAA,EACA,KACAa,EACA,QACH,CACDjB,GAAc,SAGO,OAAjBL,EAAMtB,SACR2B,GAAcL,EAAMtB,QAGtBqB,EAAgByB,UAAYnB,EAE5B,IAAIoB,EAAaC,YAAYC,MAEzBC,EAAgB7B,EAAgB8B,cAClC,2CAGEvB,IACFsB,EAAcE,IAAMxB,GAGtBsB,EAAcG,QAAU,WAClB/B,EAAMX,uBACR2C,IACUhC,EAAMN,gCAChBuC,KAIJL,EAAcM,aAAelC,EAAMZ,KAIf,OAAhBY,EAAMf,QACR2C,EAAcO,QACdP,EAAcQ,SAAW,WACvBR,EAAcS,MAAMC,WAAa,UACjCV,EAAcW,OAAQ,EAClBvC,EAAMlB,SACR8C,EAAcY,OAEdZ,EAAcO,QAEhBP,EAAcQ,SAAW,cAE3BR,EAAca,UAAY,WACxBb,EAAcc,YAAc1C,EAAMf,MAClC2C,EAAca,UAAY,YAC3B,EAGDb,EAAcW,OAAQ,EACtBX,EAAcY,QAGhB,IAAIG,GAAU,EACK,OAAf3C,EAAMb,MACRyC,EAAcgB,iBAAiB,cAAc,SAACC,GAC1BjB,EAAcc,aACb1C,EAAMb,OAClBa,EAAMN,gCACTuC,IAEFL,EAAcO,QACVnC,EAAMX,yBAA2BsD,IAGnCA,GAAU,EACVX,SAMJhC,EAAMN,+BACRuC,IAEAa,IAIF,IAAIC,EAAW,CACbC,GAAI,KACJC,OAAQ,MAIJjB,EAAY,WAEhB/B,EAAKL,QAAQW,UAAU2C,mBAIvBnD,EACG8B,cAAgC,2CAChCM,QACHpC,EAAgB8B,cACd,2CACAE,QAAU,WAAO,EAGnB,IAAIoB,EAAa,CACfH,GAAID,EAASC,GACblF,SAAUkC,EAAMlC,SAChBiF,SAAUA,EAASE,QAIrBlD,EAAgByB,UAAY,GAG5BvB,EAAKL,QAAQwD,YAAYD,EAC1B,EAsBD,SAASE,EAAgBR,IAnBzB,SAAwBS,GAEtB,IAAIC,EAAW7B,YAAYC,MACvBqB,EAAKQ,KAAKC,MAAMF,EAAW9B,GAC/BsB,EAASE,OAASS,SAASJ,GAC3BP,EAASC,GAAKA,EAIdpB,EAAc+B,WAAa,aAG3Bb,IAEI9C,EAAMP,qBACRuC,GAEH,CAIC4B,CADaf,EAAEgB,cAAcC,aAAa,eAE3C,CAED,SAAShB,IAEP,IADA,IAAIiB,EAAOC,SAASC,iBAAiB,yCAC5BxD,EAAI,EAAGA,EAAIsD,EAAKrD,OAAQD,IAAK,CACpC,IAAIyD,EAASH,EAAKtD,GAAGoB,cAAc,UAC/BqC,IACFA,EAAOC,UAAW,GAEpBJ,EAAKtD,GAAG2D,oBAAoB,QAASf,EACtC,CACF,CAED,SAASpB,IAEP,IADA,IAAI8B,EAAOC,SAASC,iBAAiB,yCAC5BxD,EAAI,EAAGA,EAAIsD,EAAKrD,OAAQD,IAAK,CACpC,IAAIyD,EAASH,EAAKtD,GAAGoB,cAAc,UAC/BqC,IACFA,EAAOC,UAAW,GAEpBJ,EAAKtD,GAAGmC,iBAAiB,QAASS,EACnC,CAhPqD,CAoP3B,OAAzBrD,EAAMV,gBACRQ,KAAKF,QAAQW,UAAU8D,WAAWrC,EAAWhC,EAAMV,eAEtD,mBAEDgF,MAAA,SACEtE,EACAuE,EACAC,EACAC,GAEuB,aAAnBF,IACFE,IACA3E,KAAK4E,mBAAmB1E,EAAOwE,IAEV,UAAnBD,GACFzE,KAAK6E,gBAAgB3E,EAAOwE,EAAoBC,EAEnD,uCAEO,SAAuBzE,EAAwBwE,GACrD,IAAMI,EAAe,CACnB9G,SAAUkC,EAAMlC,SAChBkF,GAAIlD,KAAKF,QAAQiF,cAAcC,iBAAiB,IAAK,GAAI,EAAI,KAAK,GAClE/B,SAAUjD,KAAKF,QAAQiF,cAAcE,UAAU,EAAG/E,EAAM1B,QAAQoC,OAAS,IAGrEsE,EAAOlF,KAAKF,QAAQW,UAAU0E,oBAAoBL,EAAcJ,GAItE,OAFA1E,KAAKF,QAAQW,UAAU2E,gCAAgClF,EAAOgF,GAEvDA,CACR,mCAEO,SAAmBhF,EAAwBwE,GACjD,IAAMQ,EAAOlF,KAAKqF,uBAAuBnF,EAAOwE,GAEhD1E,KAAKF,QAAQwD,YAAY4B,EAC1B,0BAEOV,MAAA,SAAgBtE,EAAwBwE,EAAoBC,GAAyB,IAAAW,EAAAtF,KACrFkF,EAAOlF,KAAKqF,uBAAuBnF,EAAOwE,GAE1CzE,EAAkBD,KAAKF,QAAQyF,oBAErCvF,KAAKE,MAAMD,EAAiBC,GAC5ByE,IAEA,IAAM7C,EAAgB7B,EAAgB8B,cACpC,2CAGIyD,EAAU,WACE,OAAZN,EAAKhC,IACPoC,EAAKxF,QAAQW,UAAUgF,YACrBxF,EAAgB8B,cAAhB,oBAAA2D,OAAkDR,EAAKjC,uBACvDiC,EAAKhC,KAKNhD,EAAMN,+BAGT4F,IAFA1D,EAAcgB,iBAAiB,QAAS0C,EAI3C,gGA1TM3F,EAAIhC,KAAGA"}